security:
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: argon2i
    role_hierarchy:
        ROLE_ADMIN:       [ ROLE_USER, ROLE_SONATA_ADMIN ]
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
#        backend_users:
#            memory:
#                users:
#                    operator@bjn.eu: { password: '%env(APP_PASSWORD)%', roles: ['ROLE_ADMIN'] }
#                    admin@bjn.eu: { password: '%env(APP_PASSWORD)%', roles: ['ROLE_ADMIN', 'ROLE_SUPER_ADMIN'] }

        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            logout:
                path: app_logout
                target: app_login
            login_throttling:
                max_attempts: 3
            guard:
                authenticators:
                    - App\Security\SimpleAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/profile, roles: ROLE_USER }
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
